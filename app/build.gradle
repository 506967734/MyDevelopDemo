apply plugin: 'com.android.application'
apply from: "${rootProject.rootDir}/common_config.gradle"


android {
    compileSdkVersion BUILD_SDK_VERSION
    buildToolsVersion BUILD_TOOLS_VERSION
    defaultConfig {
        applicationId "cn.zhudi.mvpdemo"
        minSdkVersion MIN_SDK_VERSION
        targetSdkVersion TARGT_SDK_VERSION
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        proguardFiles fileTree(dir: 'proguard', include: ['*.pro']).asList().toArray()
        ndk {
            abiFilters 'armeabi'
        }
        resConfigs "zh"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            pseudoLocalesEnabled true
        }

        debug {
            //混淆
            minifyEnabled false
            // 移除无用的resource文件
            shrinkResources false
            //Zipalign优化
            zipAlignEnabled false
            // 如果没有提供混淆规则文件，则设置默认的混淆规则文件（SDK/tools/proguard/proguard-android.txt）
            pseudoLocalesEnabled false
        }
    }
}

def buildTime() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMdd')
    return formattedDate
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    compile 'cn.lightsky.infiniteindicator:library:1.2.2'
    testCompile 'junit:junit:4.12'
    compile project(':module:retrofitLibrary')
    compile project(':module:common')
    compile project(':module:apicommon')
//    compile project(':homemodule')
//    compile project(':loginmmodule')
    compile project(':mallmodule')

    compile(name: 'homemodule-release', ext: 'aar')
    compile(name: 'loginmmodule-release', ext: 'aar')
    //debugProvided project(':module:testmodule')
}

